// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  phone    String @unique
  password String
  avatarId String @map("avatar_id")

  attachment Attachment @relation(fields: [avatarId], references: [id])

  products             Product[]
  productVisualization ProductVisualization[]

  @@map("users")
}

model Attachment {
  id  String @id @default(uuid())
  url String

  users    User[]
  products Product[]

  @@map("attachments")
}

model Category {
  id    String @id @default(uuid())
  title String
  slug  String

  products Product[]

  @@map("categories")
}

enum ProductStatus {
  available
  cancelled
  sold
}

model Product {
  id           String        @id @default(uuid())
  title        String
  description  String
  status       ProductStatus
  priceInCents Int           @map("price_in_cents")
  categoryId   String        @map("category_id")
  ownerId      String        @map("owner_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  soldAt DateTime? @map("sold_at")

  category             Category               @relation(fields: [categoryId], references: [id])
  owner                User                   @relation(fields: [ownerId], references: [id])
  attachments          Attachment[]
  productVisualization ProductVisualization[]

  @@map("products")
}

model ProductVisualization {
  id        String   @id @default(uuid())
  productId String   @map("product_id")
  userId    String   @map("user_id")
  viewedAt  DateTime @map("viewed_at")

  product Product @relation(fields: [productId], references: [id])
  user    User    @relation(fields: [userId], references: [id])

  @@map("product_visualizations")
}
